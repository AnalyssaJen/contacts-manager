I. OUTPUT EXPECTATIONS------------------- CONTACTS ------------------II. PROJECT REQUIREMENTS === #1 ==== Add 10 more contacts to your contacts.txt file. === #2 ==== Create a command line application with the following features:		  Show all your contacts			 read function to display the contents of the fie		  Add a new contact			 Write (probably ‘a)function to add content to the contents file		  Search a contact by her name			 Search array function		  Delete an existing contact			 search array function to identify the data to remove	 remove specific index item from the array (research push, pop, shift &unshift	 update array to display new contents with removed array item === #3 ==== Information should be retrieved from file when the application starts.	 fread in the function to display all contents === #4 ==== Contacts should be saved to that same file when exiting the command line application.	 fwrite function to save changes to the filename on fclose (?) === #5 ==== The user interface for the application must include a main menu like the following, where the user will need to enter a number between 1 and 5. ```	 Research strpath (string path) for formatting the output display	 Refer to “HighLow” lesson plan for menu prompts	 Create the menu options 1-5 in a function that passes the value 1-5 to return a specific        User prompt		 View contacts.		 Add a new contact.		 Search a contact by name.		 Delete an existing contact.		 Exit. Enter an option (1, 2, 3, 4 or 5): ``` === #6 ==== To delete a contact the user must enter her name, can reuse part of the code from option 3 (Search a contact by name) for this one.GIT INSTRUCTIONS:-- Set Up (first team member only) --     From Terminal:    1) Create a new folder in ~/vagrant-lamp folder called contacts-manager    2) Intialize a Git repo in this folder    3) Type and run the command "subl contactsManager.php"    4) Write "<?php" at the top of the file, save, and close    5) Add and commit the file locally    From GitHub:    1) Create a new GitHub organization    2) Add partner to organization    3) Create a new repo in the organization called "contacts-manager"    4) Copy and use the commands to push an existing repository from the command line        From Terminal:1) Paste the commands from GitHub into the terminal and run them to push up the existing repo to GitHub-- Set Up (second team member only) --    From GitHub:    1) Go to organizations' "contacts-manager" repo    2) Clone the repo url    From Terminal:    1) In ~/vagrant-lamp folder, type "git clone <url goes here> contacts-manager"    2) Use the command git checkout -b <yourNameBranch> to make your own branch-- Git Workflow for Switching Drivers --        ==================OLD DRIVER (workflow while driving)==================    1) Add and commit changes frequently from your <yourNameBranch>        2) When you are ready to switch roles with your partner:         a) make sure all work is added and committed        b) git push origin <yourNameBranch>        c) Go to GitHub and open a new pull request    ==================NEW DRIVER (workflow for getting ready to drive)==================    Assuming you have no uncommitted work locally...    From GitHub:    1) Check GitHub for new pull request from teammate    2) Accept pull request if acceptable    From Terminal:     1) git checkout master (switches to master branch)    2) git pull origin master (pulls lastest version of master from GitHub)    3) git checkout <yourNameBranch> (switch back to your branch)    4) git merge master (update local branch with updated local master branch)PHP CONTACTS MANAGER APP